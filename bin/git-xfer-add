#!/usr/bin/env sh
#
# push functionality of git-xfer plugin
# 
# @author <bprinty@gmail.com>
# ------------------------------------------------


# meta
# ----
usage() {
    echo "usage: git xfer add [options] <file>"
    echo ""
    echo "Options:"
    echo "  -h | --help              Show help and exit."
    echo "  -n | --no-ignore         Do not update .gitignore with tracked files."
}


# exec
# ----
add(){
    if [ `uname` = "Darwin" ]; then
        shasum=`shasum "$1" | awk '{ print $1 }'`
    else
        shasum=`sha1sum "$1" | awk '{ print $1 }'`
    fi
    fname=$(echo "$1" | sed "s|$base|.|" | sed 's/ /\\ /'g)
    echo "$shasum  $fname" >> "$cache"
    if [ "$gitignore" = "TRUE" ]; then
        if [ ! `grep "$fname" "$base/.gitignore"` ]; then
            echo "$fname" | sed "s|./||" >> "$base/.gitignore"
            git add "$base/.gitignore"
        fi
    fi
    sort "$cache" | uniq > "$cache.lck"
    mv "$cache.lck" "$cache"    
}

main() {
    if [ "$#" -lt 1 ]; then
        usage; exit 1
    fi

    gitignore='TRUE'
    case "$1" in
        "-h"|"--help")
            usage; exit 0
            ;;
        "-n"|"--no-ignore")
            gitignore='FALSE'; shift
            ;;
    esac

    touch "$cache"
    OLDIFS=$IFS;
    IFS="$(printf '\n\t')"
    for i in "$@"; do
        if [ "$i" = "." ]; then
            fullpath="`pwd`"
        else
            fullpath=$(cd "$(dirname $i)" && pwd -P)/$(basename "$i")
        fi
        if [ -d "$fullpath" ]; then
            find "$fullpath" -type f -exec git xfer add {} \;
        else
            add "$fullpath"
        fi
    done
    IFS=$OLDIFS
}

base=`git rev-parse --show-toplevel`
cache="$base/.git/xfer/cache"
main "$@"
