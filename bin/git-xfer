#!/bin/bash
#
# git plugin enabling remote repo syncing, because
# git-annex doesn't seem to fit this need well
# 
# @author <bprinty@gmail.com>
# ------------------------------------------------


# meta
# ----
usage() {
    echo "usage: git xfer [--version] [--help] <command> [<args>]"
    echo
    echo "Available subcommands are:"
    echo "  add       Add file to be tracked by git-xfer"
    echo "  remove    Remove file for tracking via git-xfer"
    echo "  rm        Remove file and remove tracking information for file"
    echo "  push      Push local files to remote"
    echo "  pull      Pull files from remote server locally"
    echo "  sync      Sync remote branch"
    echo "  list      List locally tracked files or remote tracked files"
    echo "  diff      List differences between local and remote"
    echo "  reset     Reset tracked caches back to normal"
    echo
}

version() {
    echo "0.1.0"
}


# exec
# ----
base=`git rev-parse --show-toplevel`
cache="$base/.xfer"
cachedb="$base/.git/xfer"

if [ "$#" -lt 1 ]; then
    usage; exit 1
fi

subcommand="$1"; shift

case $subcommand in
    "-h"|"--help")
        usage; exit 0
        ;;
    "-v"|"--version")
        version; exit 0
        ;;
    "-r"|"--reset")
        rm -rf "$cache"; exit 0
        ;;
esac

# set up git working directory
scriptdir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
if [ ! -e "$scriptdir/git-xfer-$subcommand" ]; then
    usage; exit 1
fi

# ensure user is inside git repository
if [ ! -e "$base" ]; then
    # fail the test with a git message
    git status
fi

source "$scriptdir/git-xfer-utils"
source "$scriptdir/git-xfer-$subcommand"
xrun "$@"
