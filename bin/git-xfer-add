#!/usr/bin/env sh
#
# push functionality of git-xfer plugin
# 
# @author <bprinty@gmail.com>
# ------------------------------------------------


# meta
# ----
usage() {
    echo "usage: git xfer add [options] <file>"
    echo ""
    echo "Options:"
    echo "  -h | --help              Show help and exit."
    echo "  -n | --no-ignore         Do not update .gitignore with tracked files."
}


# exec
# ----
add(){
    if [ ! -e "$1" ]; then
        echo 'File to not found!'
        exit 1
    fi

    if [ `uname` = "Darwin" ]; then
        shasum=`shasum "$1" | awk '{ print $1 }'`
    else
        shasum=`sha1sum "$1" | awk '{ print $1 }'`
    fi
    fname=$(echo "$1" | sed "s|$base|.|" | sed 's/ /\\ /'g)
    if [ ! `grep "$fname  " "$cache" | wc -l` -gt 0 ]; then
        echo "$shasum  $fname  local" >> "$cache"
        if [ "$gitignore" = "TRUE" ]; then
            if [ ! `grep "$fname" "$base/.gitignore"` ]; then
                echo "$fname" | sed "s|./||" >> "$base/.gitignore"
                git add "$base/.gitignore"
    	   fi
        fi
    fi
}

main() {
    if [ "$#" -lt 1 ]; then
        usage; exit 1
    fi

    gitignore='TRUE'
    case "$1" in
        "-h"|"--help")
            usage; exit 0
            ;;
        "-n"|"--no-ignore")
            gitignore='FALSE'; shift
            ;;
    esac

    touch "$cache"
    for i in "$@"; do
        if [ "$i" = "." ]; then
            fullpath="`pwd`"
        else
            fullpath="$(cd $(dirname "$i") && pwd -P)/$(basename "$i")"
        fi
        if [ -d "$fullpath" ]; then
            for j in `find "$fullpath" -type f`; do
                add "$j"
            done
        else
            add "$fullpath"
        fi
    done
}

base=`git rev-parse --show-toplevel`
cache="$base/.git/xfer/cache"
main "$@"
